/**
 * Variables
 */

:root {

  /* default depth to place interface */
  --hud-depth: -34cm;

  /* default depth to mono iframe content */
  --content-depth: calc(var(--hud-depth) - 4cm);
  --content-depth-hudOpen: calc(var(--hud-depth) - 8cm);

  /* default content dimensions */
  --content-width: 32cm; 
  --content-height: 26cm;

  /* icons size */
  --icon-size: 25px;
}


/**
 * Globals
 */

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  font-size: 1cm;
}

html,
body {
  background: hsl(228, 15%, 19%);
  height: 100%;
  width: 100%;
}

input {
  border: 0;
}

/**
 * VR classes
 */

.threed {
  left: 0;
  position: absolute;
  top: 0;
}

*:-moz-full-screen .threed {
  /* apply preserve-3d to that elements for layout in VR */
  transform-style: preserve-3d;
}

.camera {
  /*
  this is the element that serves as the viewport into the scene.
  hmd orientation and position is applied to this element.
  transform-origin specifies of position of the viewport.
  */
  transform-origin: 0 0 0;
}


/**
 * Content iframes
 */

/* fullscreen container */
#fs-container {
  background-color: hsl(228, 15%, 19%);
}

@keyframes fs-container-hideHud {
  from { background-color: hsl(228, 20%, 13%); }
  to { background-color: hsl(228, 15%, 19%); }
}

@keyframes fs-container-showHud {
  from { background-color: hsl(228, 15%, 19%); }
  to { background-color: hsl(228, 20%, 13%); }
}


/* 2D content container */
.container--mono {
  height: var(--content-height);
  width: var(--content-width);
}

*:-moz-full-screen .container--mono {
  /* translate top left so that mono content is centered in viewport, then position in 3D space */
  transform: translate(-50%, -50%) translate3d(0, 0, var(--content-depth));
}

@keyframes container-hideHud {
  from { 
    transform: translate(-50%, -50%) translate3d(0, 0, var(--content-depth-hudOpen)) scale(0.75, 0.75);
  }
  to { 
    transform: translate(-50%, -50%) translate3d(0, 0, var(--content-depth)) scale(1, 1); 
  }
}

@keyframes container-showHud {
  from {
    transform: translate(-50%, -50%) translate3d(0, 0, var(--content-depth)) scale(1, 1);
  }
  to { 
    transform: translate(-50%, -50%) translate3d(0, 0, var(--content-depth-hudOpen)) scale(0.75, 0.75);
  }
}

/* stereo content container */
.container--stereo {
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

/* iframe */
.frame--mono {
  /* prevent pointer events into iframe from stealing focus away from app.  */
  background: #fff;
  border: 0;
  height: 100%;
  pointer-events: none;
  transition: transform 0.5s ease;
  width: 100%;
}

/* iframe */
.frame--stereo {
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}



/**
 * HUD
 */

.hud {  
  --frame-depth: 8cm;
  --frame-distance: -4cm;
  --frame-height: 22cm;
  --frame-width: 28cm;
  transform: translate3d(0, 0, var(--hud-depth));
}


/**
 * Time
 */

.time {
  color: hsl(200, 80%, 80%);
  font-size: 1.25rem;
  font-weight: 400;
  letter-spacing: 0.03em;
  text-transform: uppercase;
  transform: translate(-50%, -50%) translate3d(0, -18cm, -7cm);
  white-space: nowrap;
}


/**
 * Title
 */

.title {
  background-color: hsla(200, 80%, 10%, 0.8);
  color: hsl(200, 80%, 80%);
  font: 400 1.1rem/1 sans-serif;
  letter-spacing: 0.06em;
  line-height: 1em;
  overflow: hidden;
  padding: 0.75em 2em;
  text-align: center;
  text-overflow: ellipsis;
  text-transform: uppercase;
  white-space: nowrap;
  width: var(--frame-width);
}

*:-moz-full-screen .title {
  left: 0;
  top: 0;
  transform: translate(-50%, -50%) translate3d(0, 9.25cm, -2cm);
}

.title__text {
}

.title__icon {
  background-repeat: no-repeat;
  background-size: 100%;
  display: none;
  height: var(--icon-size);
  margin-left: calc(var(--icon-size) * -1);
  width: var(--icon-size);
}


/**
 * Frame
 */

.frame {
  transform: translate3d(0, 0, var(--frame-distance));
}

@keyframes frameHide {
  from { transform: scaleY(1) translate3d(0, 0, var(--frame-distance)); }
  to { transform: scaleY(0.2) translate3d(0, 0, calc(var(--frame-distance) + 4cm)); }
}

@keyframes frameShow {
  from { transform: scaleY(0.2) translate3d(0, 0, calc(var(--frame-distance) + 4cm)); }
  to { transform: scaleY(1) translate3d(0, 0, var(--frame-distance)); }
}

.frame__top, .frame__bottom, .frame__left, .frame__right, .frame__front, .frame__back {
  border: 0.2cm solid hsla(200, 80%, 47%, 0.5);
}

.frame__front {
  border: 0.3cm solid hsl(200, 80%, 47%);
}

.frame__back {
  background-color: hsla(200, 80%, 47%, 0.1);
}

.frame__top {
  width: var(--frame-width);
  height: var(--frame-depth);
  transform: translate(-50%, -50%) rotateX(-90deg) translate3d(0, 0, calc(var(--frame-height) / -2));
}

.frame__bottom {
  width: var(--frame-width);
  height: var(--frame-depth);
  transform: translate(-50%, -50%) rotateX(90deg) translate3d(0, 0, calc(var(--frame-height) / -2));
}

.frame__left {
  width: var(--frame-depth);
  height: var(--frame-height);
  transform: translate(-50%, -50%) rotateY(90deg) translate3d(0, 0, calc(var(--frame-width) / -2));
}

.frame__right {
  width: var(--frame-depth);
  height: var(--frame-height);
  transform: translate(-50%, -50%) rotateY(-90deg) translate3d(0, 0, calc(var(--frame-width) / -2));
}

.frame__front {
  width: var(--frame-width);
  height: var(--frame-height);
  transform: translate(-50%, -50%) rotateY(180deg) translate3d(0, 0, calc(var(--frame-depth) / -2));
}

.frame__back {
  width: var(--frame-width);
  height: var(--frame-height);
  transform: translate(-50%, -50%) rotateY(0deg) translate3d(0, 0, calc(var(--frame-depth) / -2));
}


/**
 * URL Bar
 */

.urlbar {
  --urlbar-y: 32cm;
  --urlbar-z: 7cm;
  background-color: hsla(228, 15%, 6%, 0.75);
  height: 20cm;
  padding: 1.5rem;
  text-align: center;
  width: 50cm;
}

*:-moz-full-screen .urlbar {
  left: 0;
  top: 0;
  transform: translate(-50%, 100%) translate3d(0, var(--urlbar-y), var(--urlbar-z));
}

.urlbar__input {
  font: 500 1.2rem/1 sans-serif;
  letter-spacing: 0.05em;
  padding: 0.5em 1em;
  text-align: center;
  text-transform: uppercase;
  transition: .25s width ease;
  width: 18cm;
}

.urlbar__input, .urlbar__input::-moz-selection {
  background: white;
  color: hsl(0, 0%, 20%);
}

.urlbar__input:focus {
  width: 22cm;
}

@keyframes urlbarShow {
  from { 
    transform: translate(-50%, -100%) translate3d(0, calc(var(--urlbar-y) + 4cm), var(--urlbar-z));
  }
  to { 
    transform: translate(-50%, -100%) translate3d(0, var(--urlbar-y), var(--urlbar-z));
  }
}

@keyframes urlbarHide {
  from { 
    transform: translate(-50%, -100%) translate3d(0, var(--urlbar-y), var(--urlbar-z));
  }
  to { 
    transform: translate(-50%, -100%) translate3d(0, calc(var(--urlbar-y) + 4cm), var(--urlbar-z));
  }
}


/**
 * Navigation controls
 */

.nav {
  -moz-user-select: none; /* Disable selection of navigation controls. */
  font-size: 1.5rem;
  padding: 1em;
  text-align: center;
  width: 28cm;
}

*:-moz-full-screen .nav {
  left: 0;
  top: 0;
  transform: translate(-50%, -100%) translate3d(0, 22cm, 7.25cm);
}

.nav__btn,
.fa.nav__btn {
  color: white;
  display: inline-block;
  line-height: 1em;
  margin: 0;
  opacity: 0.5;
  padding: 1em;
  transition: .1s opacity;
}

.nav__btn:not([disabled]):hover {
  cursor: pointer;
  opacity: 1;
}

.nav__btn[disabled] {
  opacity: .25;
  pointer-events: none;
}


/**
 * Meta functions
 */

.meta {
  border-top: 0.1rem solid hsla(0, 0%, 100%, 0.2);
  font: 400 1rem/1 sans-serif;
  height: 5cm;
  letter-spacing: 0.05em;
  padding: 2rem;
  text-align: center;
  text-transform: uppercase;
  width: 30cm;
}

*:-moz-full-screen .meta {
  left: 0;
  top: 0;
  transform: translate(-50%, -100%) translate3d(0, 26cm, 7.25cm);
}

.meta__btn {
  color: hsla(0, 0%, 100%, 0.4);
  display: inline-block;
  padding: 1em;
}


/**
 * Window controls
 */

.window-controls {
  left: 10px;
  line-height: 30px;
  margin-left: 7px;
  position: absolute;
  top: 10px;
  transform: translate(0, 0) translate3d(0, 0, 10cm));
  vertical-align: center;
  width: 100px;
}

.window-controls .control {
  border-radius: 50%;
  display: inline-block;
  height: 12px;
  margin-right: 8px;
  width: 12px;
}

.window-controls .control--shutdown {
  background: #FC5753;
}

.window-controls .control--minimize {
  background: #FDBC40;
}

.window-controls .control--fullscreen {
  background: #33C748;
}

.window-controls .control:hover {
  background: hsl(0, 0%, 86%);
}


/**
 * Other interface
 */

.btn--entervr {
  background: hsl(0, 0%, 30%);
  border: 0;
  color: white;
  font: 300 0.5rem/1 sans-serif;
  letter-spacing: 0.1em;
  padding: 0.25rem;
  position: absolute;
  right: 2em;
  text-transform: uppercase;
  top: 2em;
}

.btn--entervr:hover {
  background: hsl(0, 0%, 45%);
  cursor: pointer;
};
