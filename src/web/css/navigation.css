/**
 * Variables
 */

:root {

  /* default depth to place interface */
  --hud-depth: -36cm;

  /* default depth to mono iframe content */
  --content-depth: calc(var(--hud-depth) - 8cm);
  --content-depth-hud--open: calc(var(--hud-depth) - 16cm);

  /* default zoom value for mono iframe content */
  --content-scale: 3;

  /* default content dimensions */
  --content-width: 22cm;
  --content-height: 14cm;

  /* typography */

  --sans-serif: 'Montserrat';

  /* icons size */
  --icon-size: 25px;

  /* colors */
  --color-blue-vibrant: hsl(200, 89%, 50%);
  --color-blue-vibrant-faded: hsla(200, 89%, 70%, .75);
}


/**
 * Common animations
 */

@keyframes show {
  from { visibility: hidden; }
  to { visibility: visible; }
}

@keyframes hide {
  from { visibility: visible; }
  to { visibility: hidden; }
}


/**
 * Globals
 */

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  font-size: 1cm;
}

html,
body {
  background: hsla(228, 15%, 19%, 0);
  height: 100%;
  width: 100%;
}

input, button, iframe {
  border: 0;
}

button {
  cursor: pointer;
}

.pointer-none {
  pointer-events: none;
}


/**
 * VR classes
 */

.threed {
  left: 0;
  position: absolute;
  top: 0;
}

*:-moz-full-screen .threed {
  /* apply preserve-3d to that elements for layout in VR */
  transform-style: preserve-3d;
}

.camera {
  /*
  this is the element that serves as the viewport into the scene.
  hmd orientation and position is applied to this element.
  transform-origin specifies of position of the viewport.
  */
  transform-origin: 0 0 0;
}


/**
 * Content iframes
 */

/* fullscreen container */
#fs-container {
  background-color: hsla(228, 15%, 19%);
}

#fs-container:-moz-full-screen * {
  cursor: none;
}

@keyframes fs-container-lighten {
  from { background-color: hsl(228, 20%, 13%); }
  to { background-color: hsl(228, 15%, 19%); }
}

@keyframes fs-container-darken {
  from { background-color: hsl(228, 15%, 19%); }
  to { background-color: hsl(228, 20%, 13%); }
}

/* content projection */
.frame--mono {
  height: var(--content-height);
  width: var(--content-width);
  transition: 0.3s transform ease;
  transform: translate(-50%, -50%) translate3d(0, 0, var(--content-depth)) scale(var(--content-scale), var(--content-scale));
}

.frame--mono.pushBack {
  transform: translate(-50%, -50%) translate3d(0, 0, var(--content-depth-hud--open)) scale(var(--content-scale), var(--content-scale));
}

.frame--stereo {
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

/* content iframe */
#content-container iframe {
  background: white;
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  /* Prevent iframe's pointer events from stealing focus away from the app.
     Uncomment this if you want the user to be able to click on any scrollable
     element and scroll within that element using a gamepad. */
  pointer-events: none;
}


/**
 * Cursor
 */
[data-hud="open"] .cursor,
[data-projection="mono"] .cursor.is-visible {
  visibility: visible;
}

.cursor {
  width: 0;
  height: 0;
  pointer-events: none;
  position: relative;
  transform: translate3d(0, 0, var(--content-depth));
  visibility: hidden;
}

.cursor-arrow {
  border-top: 0.5cm solid transparent;
  border-right: 1.2cm solid var(--color-blue-vibrant-faded);
  border-bottom: 0.5cm solid transparent;
  transform: rotate(55deg) translate(0cm, 0.25cm) rotateY(-35deg);
}


/**
 * HUD
 */

.hudHolder {
  transform: translate3d(0, 6cm, 0); 
}

.hud {
  --hud-width: 28cm;
  top: 18cm;
  left: 18cm;
  transform: translate3d(0, 0, var(--hud-depth));
}

*:-moz-full-screen .hud {
  left: 0;
  top: 0;
}


/**
 * Loading
 */

.loading {
  background: hsla(197, 97%, 59%, 0.76);
  color: white;
  font: 600 0.75rem/1em var(--sans-serif);
  padding: 0.6em;
  text-align: center;
  text-transform: uppercase;
  transform: translate(-50%, -50%) translate3d(0, 12cm, 4cm);
  width: 6cm;
}


/**
 * Title
 */

.title {
  background-color: black;
  color: white;
  font: 400 1.1rem/1 var(--sans-serif);
  letter-spacing: 0.06em;
  line-height: 1em;
  overflow: hidden;
  padding: 0.75em 2em;
  text-overflow: ellipsis;
  text-transform: uppercase;
  transform: translate(-50%, -50%) translate3d(0, -10cm, -2cm);
  white-space: nowrap;
  width: var(--hud-width);
}

.title__text {
}

.title__icon {
  background-repeat: no-repeat;
  background-size: 100%;
  display: none;
  height: var(--icon-size);
  margin-left: calc(var(--icon-size) * -1);
  width: var(--icon-size);
}


/**
 * Directory
 */

.directory {
  transform: translate(-50%, -50%) translate3d(0, 0, 0);
  width: 38cm;
  font-size: 0;
}

.directory__tile {
  background: hsla(0, 0%, 100%, 0.4);
  background-size: contain;
  background-position: left bottom;
  display: inline-block;
  height: 8cm;
  margin: 0.25cm;
  overflow: hidden;
  position: relative;
  text-decoration: none;
  transition: 0.2s background, 0.2s color;
  width: 7cm;
}

.directory__tile:hover,
.directory__tile.hover {
  background-color: var(--color-blue-vibrant);
  color: white;
}

.directory__tile:active,
.directory__tile.active {
}

.directory__tile .name {
  background: white;
  color: hsla(0, 0%, 20%, 1);
  font: 500 0.8rem/1em var(--sans-serif);
  overflow: hidden;
  padding: 0.5cm;
  text-align: left;
  text-overflow: ellipsis;
  text-transform: uppercase;
  width: 100%;
  white-space: nowrap;
}

.directory__tile .type {
  color: hsl(0, 0%, 60%);
  display: block;
  font: 400 0.75em/1em var(--sans-serif);
  margin-top: 0.2cm;
  pointer-events: none;
}


/**
 * URL Bar
 */

.urlbar {
  text-align: left;
  transform: translate(-50%, 0) translate3d(0, 14cm, 4cm);
  width: var(--hud-width);
}

.urlbar__input {
  font: 500 1.2rem/1 var(--sans-serif);
  letter-spacing: 0.05em;
  padding: 0.5em 1em;
  text-align: center;
  text-transform: uppercase;
  transition: .25s width ease;
  background: #efefef;
  width: 100%;
}

.urlbar__input:hover,
.urlbar__input.hover {
  background: var(--color-blue-vibrant);
  color: white;
}

.urlbar__input:focus {
  background: var(--color-blue-vibrant);
  border-bottom: 0.25em solid white;
  color: white;
}


/* NOTE: These selectors cannot be combined: https://developer.mozilla.org/en-US/docs/Web/CSS/::selection#Examples */
.urlbar__input::selection {
  background: hsla(0, 0%, 0%, 0.2);
  color: white;
}
.urlbar__input::-moz-selection {
  background: hsla(0, 0%, 0%, 0.2);
  color: white;
}


/**
 * Navigation controls
 */

.backfwd {
  transform: translate(-50%, 0) translate3d(-9cm, 13cm, 0);
}

.back {
  left: 0;
  position: absolute;
  top: 0;
}

.forward {
  left: 3cm;
  position: absolute;
  top: 0;
}

.stopreload {
  transform: translate(-50%, 0) translate3d(3cm, 13cm, 0);
}

.stop,
.reload {
  left: 0;
  position: absolute;
  top: 0;
}


/* button */.nav,
.fa.nav {
  -moz-user-select: none; /* Disable selection of navigation controls. */
  background: white;
  color: black;
  font-size: 1.2cm;
  line-height: 1em;
  margin: 0;
  padding: 0.5em;
  transition: .1s opacity;
}

.nav:not([disabled]):hover,
.nav:not([disabled]).hover {
  background: var(--color-blue-vibrant);
  color: white;
  opacity: 1;
}

.nav[disabled] {
  opacity: .25;
  pointer-events: none;
}

.nav:not([disabled]):active,
.nav:not([disabled]).active {
  color: #fff;
}


/**
 * Close HUD
 */

.closehud {
  font: 600 0.75rem/1.2em var(--sans-serif);
  padding: 0.6em;
  text-align: center;
  text-transform: uppercase;
  transform: translate(-50%, 0) translate3d(0, 17cm, 0);
  width: 7cm;
  display: none;
}

.closehud:hover,
.closehud.hover {
  background: black;
  color: white;
}

.closehud:active,
.closehud.active {
  background: var(--color-blue-vibrant);
  border: 0.25cm solid var(--color-blue-vibrant);
  color: white;
}


/**
 * Menu
 */

 /*
.menu__box {
  background-color: hsla(0, 0%, 0%, 0.4);
  color: white;
  font: 200 3rem/1em sans-serif;
  padding: 0.25em;
  text-align: center;
  text-transform: uppercase;
  transform: translate3d(-50%, -50%, var(--hud-depth));
}
*/



/**
 * Frame
 */

.frame {
  --frame-depth: 80cm;
  --frame-distance: 0;
  --frame-height: 40cm;
  --frame-width: 100cm;
  transform: translate3d(0, 0, var(--frame-distance));
  display: none;
}

@keyframes frameHide {
  from { transform: scaleY(1) translate3d(0, 0, var(--frame-distance)); }
  to { transform: scaleY(0.2) translate3d(0, 0, calc(var(--frame-distance) + 4cm)); }
}

@keyframes frameShow {
  from { transform: scaleY(0.2) translate3d(0, 0, calc(var(--frame-distance) + 4cm)); }
  to { transform: scaleY(1) translate3d(0, 0, var(--frame-distance)); }
}

.frame__top, .frame__bottom, .frame__left, .frame__right, .frame__front, .frame__back {
  border: 0.2cm solid hsla(200, 80%, 47%, 0.5);
}

.frame__front {
  border: 0.3cm solid hsl(200, 80%, 47%);
}

.frame__back {
  background-color: hsla(200, 80%, 47%, 0.1);
}

.frame__top {
  width: var(--frame-width);
  height: var(--frame-depth);
  transform: translate(-50%, -50%) rotateX(-90deg) translate3d(0, 0, calc(var(--frame-height) / -2));
}

.frame__bottom {
  width: var(--frame-width);
  height: var(--frame-depth);
  transform: translate(-50%, -50%) rotateX(90deg) translate3d(0, 0, calc(var(--frame-height) / -2));
}

.frame__left {
  width: var(--frame-depth);
  height: var(--frame-height);
  transform: translate(-50%, -50%) rotateY(90deg) translate3d(0, 0, calc(var(--frame-width) / -2));
}

.frame__right {
  width: var(--frame-depth);
  height: var(--frame-height);
  transform: translate(-50%, -50%) rotateY(-90deg) translate3d(0, 0, calc(var(--frame-width) / -2));
}

.frame__front {
  width: var(--frame-width);
  height: var(--frame-height);
  transform: translate(-50%, -50%) rotateY(180deg) translate3d(0, 0, calc(var(--frame-depth) / -2));
}

.frame__back {
  width: var(--frame-width);
  height: var(--frame-height);
  transform: translate(-50%, -50%) rotateY(0deg) translate3d(0, 0, calc(var(--frame-depth) / -2));
}



/**
 * Background
 */

.background, .backgroundLeft, .backgroundRight {
  background: hsla(228, 20%, 13%, 0.75);
  height: 22cm;
  width: 50cm;
}

.background {
  transform: translate(-50%, -50%) translate3d(0, 0, calc( var(--hud-depth) - 4cm ));
}

/*.backgroundLeft {
  transform: translate(-50%, -50%) translate3d(0, 0, -4cm);
}

.backgroundRight {
  transform: translate(-50%, -50%) translate3d(0, 0, -4cm);
}*/

@keyframes showBackground {
  from { background: hsla(228, 20%, 13%, 0.0); height: 0cm; }
  to { background: hsla(228, 20%, 13%, 0.75); height: 22cm; }
}

@keyframes hideBackground {
  from { background: hsla(228, 20%, 13%, 0.75); height: 22cm; }
  to { background: hsla(228, 20%, 13%, 0.0); height: 0cm; }
}

/**
 * Other interface
 */

.btn--entervr {
  background: hsl(0, 0%, 30%);
  border: 0;
  color: white;
  font: 300 0.5rem/1 sans-serif;
  letter-spacing: 0.1em;
  padding: 0.25rem;
  position: absolute;
  right: 2em;
  text-transform: uppercase;
  top: 2em;
}

.btn--entervr:hover,
.btn--entervr.hover {
  background: hsl(0, 0%, 45%);
  cursor: pointer;
}

.btn--entervr:active,
.btn--entervr.active,
.btn--entervr:focus,
.btn--entervr.focus {
  background-color: var(--color-blue-vibrant);
  color: #fff;
}
